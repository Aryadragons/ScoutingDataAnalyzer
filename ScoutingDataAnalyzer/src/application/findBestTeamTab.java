package application;

import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;

public class findBestTeamTab extends GridPane {
	
	private ComboBox<String> firstMetCB;
	private ComboBox<String> secondMetCB;
	private ComboBox<String> thirdMetCB;
	private ComboBox<String> fourthMetCB;
	private ComboBox<String> fifthMetCB;
	private ComboBox<String> range1CB;
	private ComboBox<String> range2CB;
	private ComboBox<String> range3CB;
	private ComboBox<String> range4CB;
	private ComboBox<String> range5CB;
	private ComboBox<String> numOfTeamsCB;
	private Button submitB;
	private TeamList theTL;
	
	public findBestTeamTab(TeamList imTL) {
		theTL = imTL;
		Label mect1L = new Label("First Meterict to Sort on");
		Label mect2L = new Label("Second Meterict to Sort on");
		Label mect3L = new Label("Third Meterict to Sort on");
		Label mect4L = new Label("Fourth Meterict to Sort on");
		Label mect5L = new Label("Fifth Meterict to Sort on");
		mect1L.setId("smallTitle");
		mect2L.setId("smallTitle");
		mect3L.setId("smallTitle");
		mect4L.setId("smallTitle");
		mect5L.setId("smallTitle");
		firstMetCB = new ComboBox<String>();
		firstMetCB.getItems().addAll("Cycles", "Speckers", "Amp", "Trap", "Climb", "High Notes");
		secondMetCB = new ComboBox<String>();
		secondMetCB.getItems().addAll("Cycles", "Specker", "Amp", "Trap", "Climb", "High Notes");
		thirdMetCB = new ComboBox<String>();
		thirdMetCB.getItems().addAll("Cycles", "Specker", "Amp", "Trap", "Climb", "High Notes");
		fourthMetCB = new ComboBox<String>();
		fourthMetCB.getItems().addAll("Cycles", "Specker", "Amp", "Trap", "Climb", "High Notes");
		fifthMetCB = new ComboBox<String>();
		fifthMetCB.getItems().addAll("Cycles", "Specker", "Amp", "Trap", "Climb", "High Notes");
		BorderPane mect1BP = new BorderPane();
		BorderPane mect2BP = new BorderPane();
		BorderPane mect3BP = new BorderPane();
		BorderPane mect4BP = new BorderPane();
		BorderPane mect5BP = new BorderPane();
		mect1BP.setTop(mect1L);
		mect2BP.setTop(mect2L);
		mect3BP.setTop(mect3L);
		mect4BP.setTop(mect4L);
		mect5BP.setTop(mect5L);
		mect1BP.setCenter(firstMetCB);
		mect2BP.setCenter(secondMetCB);
		mect3BP.setCenter(thirdMetCB);
		mect4BP.setCenter(fourthMetCB);
		mect5BP.setCenter(fifthMetCB);
		mect1BP.setId("findBestTeamSelMectBP");
		mect2BP.setId("findBestTeamSelMectBP");
		mect3BP.setId("findBestTeamSelMectBP");
		mect4BP.setId("findBestTeamSelMectBP");
		mect5BP.setId("findBestTeamSelMectBP");
		this.add(new Label("    "), 0, 0);
		this.add(new Label("    "), 2, 0);
		this.add(new Label("    "), 4, 0);
		this.add(new Label("    "), 6, 0);
		this.add(new Label("    "), 8, 0);
		this.add(new Label("    "), 0, 2);
		this.add(new Label("    "), 0, 4);
		this.add(mect1BP, 1, 1);
		this.add(mect2BP, 3, 1);
		this.add(mect3BP, 5, 1);
		this.add(mect4BP, 7, 1);
		this.add(mect5BP, 9, 1);
		Label range1L = new Label("Range of tieing for stat 1");
		Label range2L = new Label("Range of tieing for stat 2");
		Label range3L = new Label("Range of tieing for stat 3");
		Label range4L = new Label("Range of tieing for stat 4");
		Label range5L = new Label("Range of tieing for stat 5");
		range1L.setId("smallTitle");
		range2L.setId("smallTitle");
		range3L.setId("smallTitle");
		range4L.setId("smallTitle");
		range5L.setId("smallTitle");
		range1CB = new ComboBox<String>();
		range2CB = new ComboBox<String>();
		range3CB = new ComboBox<String>();
		range4CB = new ComboBox<String>();
		range5CB = new ComboBox<String>();
		range1CB.getItems().addAll("0.2", "0.5", "1", "2", "3", "4", "5");
		range2CB.getItems().addAll("0.2", "0.5", "1", "2", "3", "4", "5");
		range3CB.getItems().addAll("0.2", "0.5", "1", "2", "3", "4", "5");
		range4CB.getItems().addAll("0.2", "0.5", "1", "2", "3", "4", "5");
		range5CB.getItems().addAll("0.2", "0.5", "1", "2", "3", "4", "5");
		BorderPane range1BP = new BorderPane();
		BorderPane range2BP = new BorderPane();
		BorderPane range3BP = new BorderPane();
		BorderPane range4BP = new BorderPane();
		BorderPane range5BP = new BorderPane();
		range1BP.setTop(range1L);
		range2BP.setTop(range2L);
		range3BP.setTop(range3L);
		range4BP.setTop(range4L);
		range5BP.setTop(range5L);
		range1BP.setCenter(range1CB);
		range2BP.setCenter(range2CB);
		range3BP.setCenter(range3CB);
		range4BP.setCenter(range4CB);
		range5BP.setCenter(range5CB);
		range1BP.setId("findBestTeamSelRangeBP");
		range2BP.setId("findBestTeamSelRangeBP");
		range3BP.setId("findBestTeamSelRangeBP");
		range4BP.setId("findBestTeamSelRangeBP");
		range5BP.setId("findBestTeamSelRangeBP");
		this.add(range1BP, 1, 3);
		this.add(range2BP, 3, 3);
		this.add(range3BP, 5, 3);
		this.add(range4BP, 7, 3);
		this.add(range5BP, 9, 3);
		Label numOfTeamsL = new Label("How Many teams");
		numOfTeamsL.setId("smallTitle");
		numOfTeamsCB = new ComboBox<String>();
		numOfTeamsCB.getItems().addAll("5", "10", "15", "20", "25", "30", "35", "40");
		BorderPane numOfTeamsBP = new BorderPane();
		numOfTeamsBP.setTop(numOfTeamsL);
		numOfTeamsBP.setCenter(numOfTeamsCB);
		numOfTeamsBP.setId("findBestTeamSelNumOfTeamBP");
		this.add(numOfTeamsBP, 1, 5);
		//Adding in the Button
		submitB = new Button("Submit");
		this.add(submitB, 1, 7);
	}
	
	public TeamList findBestTeams(int numOfTeams, int cyPr, int ampPr, int spePr, int trapPr, int climbPr, int highNotePr) {
		TeamList sortedTL = new TeamList();
		return null;
	}
	
	public void displayBestTeams(int numOfTeams, TeamList sortedTL, int cyPr, int ampPr, int spePr, int trapPr, int climbPr, int highNotePr) {
		
		if(numOfTeams == 10) {
			Team tempT = sortedTL.listOfTeams.get(0);
			int teamNum = tempT.getTeamNum();
			double cy = tempT.getAvgCycles();
			double spe = tempT.getAvgSpe();
			double amp = tempT.getAvgAmp();
			double trap = tempT.getAvgTrap();
			double climb = tempT.getAvgClimb();
			double highN = tempT.getHumAmpNotes();
			Label teamNumL = new Label(Integer.toString(teamNum));
			Label cyL = new Label(Double.toString(cy));
			Label speL = new Label(Double.toString(spe));
			Label ampL = new Label(Double.toString(amp));
			Label trapL = new Label(Double.toString(trap));
			Label climbL = new Label(Double.toString(climb));
			Label highNL = new Label(Double.toString(highN));
			teamNumL.setId("avgStat");
			cyL.setId("avgStat");
			speL.setId("avgStat");
			ampL.setId("avgStat");
			trapL.setId("avgStat");
			climbL.setId("avgStat");
			highNL.setId("avgStat");
			Label teamNumTitleL = new Label("Team Num");
			Label cyTitleL = new Label("Avg Cycles");
			Label speTitleL = new Label("Avg Speaker");
			Label ampTitleL = new Label("Avg Amp");
			Label trapTitleL = new Label("Avg Trap");
			Label climbTitleL = new Label("Avg CLimb");
			Label highNTitleL = new Label("Avg High Notes");
			teamNumTitleL.setId("smallTitle");
			cyTitleL.setId("smallTitle");
			speTitleL.setId("smallTitle");
			ampTitleL.setId("smallTitle");
			trapTitleL.setId("smallTitle");
			climbTitleL.setId("smallTitle");
			highNTitleL.setId("smallTitle");
			BorderPane teamNumBP = new BorderPane();
			BorderPane cyBP = new BorderPane();
			BorderPane speBP = new BorderPane();
			BorderPane ampBP = new BorderPane();
			BorderPane trapBP = new BorderPane();
			BorderPane climbBP = new BorderPane();
			BorderPane highNBP = new BorderPane();
			teamNumBP.setTop(teamNumTitleL);
			cyBP.setTop(cyTitleL);
			speBP.setTop(speTitleL);
			ampBP.setTop(ampTitleL);
			trapBP.setTop(trapTitleL);
			climbBP.setTop(climbTitleL);
			highNBP.setTop(highNTitleL);
			teamNumBP.setCenter(teamNumL);
			cyBP.setCenter(cyL);
			speBP.setCenter(speL);
			ampBP.setCenter(ampL);
			trapBP.setCenter(trapL);
			climbBP.setCenter(climbL);
			highNBP.setCenter(highNL);
			teamNumBP.setId("findBestTeamStatBP1");
			cyBP.setId("findBestTeamStatBP2");
			speBP.setId("findBestTeamStatBP3");
			ampBP.setId("findBestTeamStatBP4");
			trapBP.setId("findBestTeamStatBP5");
			climbBP.setId("findBestTeamStatBP6");
			highNBP.setId("findBestTeamStatBP7");
			VBox teamVB = new VBox(5);
			teamVB.getChildren().addAll(teamNumBP, cyBP, speBP, ampBP, trapBP, climbBP, highNBP);
			BorderPane teamBP = new BorderPane();
			teamBP.setCenter(teamVB);
			teamBP.setId("findBestTeamStatAllBP1");
		}
	}
}
